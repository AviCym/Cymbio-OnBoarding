{"version":3,"file":"postOrder.js","sourceRoot":"","sources":["../../controllers/postOrder.ts"],"names":[],"mappings":";;;;;;AACA,4EAAoD;AAEpD,MAAM,YAAY,GAAG,IAAI,gBAAM,CAAC,QAAQ,CAAC,CAAC;AAEnC,MAAM,KAAK,GAAG,KAAK,EAAE,GAAW,EAAE,GAAY,EAAE,EAAE;IACrD,IAAI;QACA,MAAM,aAAa,GAAU,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtD,qCAAqC;QACrC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACzB;IACD,OAAO,KAAS,EAAE;QACd,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;KACpD;AACL,CAAC,CAAA;AAXY,QAAA,KAAK,SAWjB","sourcesContent":["import { Request, Response } from \"express\";\nimport Sender from \"../middlewares/rabbitmq/sender\";\n\nconst ordersSender = new Sender(\"orders\");\n\nexport const order = async (req:Request, res:Response) => {\n    try {\n        const receivedOrder:string = JSON.stringify(req.body);\n        // sender.orderSender(receivedOrder);\n        ordersSender.amqpSender(receivedOrder);\n        res.status(201).json(receivedOrder);\n        console.log(req.body);\n    }\n    catch (error:any) {\n        res.status(409).json({ message: error.message });\n    }\n}"]}